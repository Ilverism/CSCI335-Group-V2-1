lr0: 0.01  # initial learning rate (SGD=1E-2, Adam=1E-3)             #!!! Changed from 0.01 to 0.007
lrf: 0.1  # final OneCycleLR learning rate (lr0 * lrf)
momentum: 0.937  # SGD momentum/Adam beta1
weight_decay: 0.0005  # optimizer weight decay 5e-4
warmup_epochs: 4.0  # warmup epochs (fractions ok)                              #!!! Changed from 3.0 to 4.0       
warmup_momentum: 0.8  # warmup initial momentum
warmup_bias_lr: 0.1  # warmup initial bias lr
box: 0.05  # box loss gain
cls: 0.3  # cls loss gain 
cls_pw: 1.0  # cls BCELoss positive_weight
obj: 0.75  # obj loss gain (scale with pixels)                                  #!!! Changed from 0.7 to 0.65
obj_pw: 1.0  # obj BCELoss positive_weight
iou_t: 0.20  # IoU training threshold
anchor_t: 4.0  # anchor-multiple threshold
# anchors: 3  # anchors per output layer (0 to ignore)
fl_gamma: 0.0  # focal loss gamma (efficientDet default gamma=1.5)
hsv_h: 0.015  # image HSV-Hue augmentation (fraction) 
hsv_s: 0.5  # image HSV-Saturation augmentation (fraction)                      #!!! Changed from 0.7 to 0.5
hsv_v: 0.3  # image HSV-Value augmentation (fraction)                           #!!! Changed from 0.4 to 0.3
degrees: 1.0  # image rotation (+/- deg)                                        #!!! Changed from 0.0 to 1.0
translate: 0.15  # image translation (+/- fraction)                         #!!! Changed from 0.2 to 0.15   
scale: 0.75  # image scale (+/- gain)                                       #!!! Changed from 0.9 to 0.75                                                
shear: 0.3  # image shear (+/- deg)                                             #!!! Changed from 0.0 to 0.3
perspective: 0.0  # image perspective (+/- fraction), range 0-0.001
flipud: 0.0  # image flip up-down (probability)
fliplr: 0.25  # image flip left-right (probability)                           #!!! Changed from 0.5 to 0.25
mosaic: 1.00  # image mosaic (probability)                                    
mixup: 0.20  # image mixup (probability)                                     #!!! Changed from 0.15 to 0.20                                               
copy_paste: 0.0  # image copy paste (probability)
paste_in: 0.15  # image copy paste (probability), use 0 for faster training
loss_ota: 1 # use ComputeLossOTA, use 0 for faster training